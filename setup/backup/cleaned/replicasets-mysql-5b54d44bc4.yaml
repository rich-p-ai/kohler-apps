apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/version: 1.0.0
    cluster: ocp-prd
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    environment: production
  labels:
    app: mysql
    app.kubernetes.io/name: balance-fit
    app.kubernetes.io/part-of: balance-fit-stack
    component: database
    environment: production
    pod-template-hash: 5b54d44bc4
  name: mysql-5b54d44bc4
  namespace: balance-fit-prd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      app.kubernetes.io/name: balance-fit
      app.kubernetes.io/part-of: balance-fit-stack
      environment: production
      pod-template-hash: 5b54d44bc4
  template:
    metadata:
      annotations:
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/version: 1.0.0
        cluster: ocp-prd
        environment: production
      creationTimestamp: null
      labels:
        app: mysql
        app.kubernetes.io/name: balance-fit
        app.kubernetes.io/part-of: balance-fit-stack
        component: database
        environment: production
        pod-template-hash: 5b54d44bc4
    spec:
      containers:
        - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: mysql-secret
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: mysql-secret
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: DB_DATABASE
                  name: mysql-config
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: mysql-secret
          image: registry.redhat.io/rhel8/mysql-80:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: mysql
          ports:
            - containerPort: 3306
              name: mysql
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
