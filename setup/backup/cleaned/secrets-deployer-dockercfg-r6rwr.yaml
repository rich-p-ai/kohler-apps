apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: deployer
    kubernetes.io/service-account.uid: 7d113927-d880-4f10-a212-98a00b01c35e
    openshift.io/internal-registry-auth-token.binding: legacy
    openshift.io/migration-registry: ""
    openshift.io/token-secret.name: deployer-token-jwjfc
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJiYWxhbmNlLWZpdC1wcmQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tandqZmMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI3ZDExMzkyNy1kODgwLTRmMTAtYTIxMi05OGEwMGIwMWMzNWUiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6YmFsYW5jZS1maXQtcHJkOmRlcGxveWVyIn0.YTo5mXkxYFdc1EqdcZJ6v8AuKVmoL24AP1-6mdMyA-JuFNuSI_GmTAMDuYUHcvhNcPiwkPc_54dARrs4ANfzoGvnjAzBGO_Hi4ZPN40Hq-Skyy5v7fGGwDMDwNbodwdljM6EJdhFkxwQ-F_uXOa9bmY_3Yg99oxYggpgpA6eqIbz2U4oyzLaYeozXm13wYyECDA2qbbSkhN21h9FCCufx8I5wNW6WsFDCFXEc025v1F10gkFpwf4NhhNDKEyzcM8vMtEDuXq-txh9Xq9PPCN0_w8CpqYDC7QwV8t98gxXz1NQoJZi8Mfkcz75IF6LTB-2c7xMORknMzDsNxpa5WgdQ
  labels:
    migration.openshift.io/migrated-by-migmigration: 0ed510f5-66f0-409c-a1a0-c7e18d3d47ff
    migration.openshift.io/migrated-by-migplan: bd694ade-91df-4eac-8fe7-e614f02f8274
    velero.io/backup-name: migration-1e0ed-initial-sbf8k
    velero.io/restore-name: migration-1e0ed-final-c9chn
  name: deployer-dockercfg-r6rwr
  namespace: balance-fit-prd
type: kubernetes.io/dockercfg
