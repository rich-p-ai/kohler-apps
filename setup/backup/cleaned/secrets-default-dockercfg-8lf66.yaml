apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: default
    kubernetes.io/service-account.uid: d453b678-4d6a-486b-89cd-2ebf11d4c632
    openshift.io/internal-registry-auth-token.binding: legacy
    openshift.io/migration-registry: ""
    openshift.io/token-secret.name: default-token-kzh88
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJiYWxhbmNlLWZpdC1wcmQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1remg4OCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZDQ1M2I2NzgtNGQ2YS00ODZiLTg5Y2QtMmViZjExZDRjNjMyIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmJhbGFuY2UtZml0LXByZDpkZWZhdWx0In0.oNBX6fuTHnPgr2GrB_Lnj87zFm1a4PrnT4AlYt2YcHiOPfgzr3iL_YBIAsFMUzbsWPg6yOpCHpiFbPeKkBbTm4QDI4mUYO_SIVo7gB4DOT3eT2R5VwtUVbDGXkOF51qJEmYodnoBAKJQtQUW-3xTuEkwQfQlXYHdzC3hotK-Tx1RBuQtHfK1wwx9cLBB4BvgHyHhdSZpcfWCq-zh2ukERczy3FkuTdg1eC_hQNDYHEIz32mGqameGWuNd2HMGgwJbTbb8K6TczN4N7D8CYCZVpI_A2-he0ulXQkNXbd_iOJ62UAPwxEV5bw-3pklfdNwIXShl7pTHFX7dL07SV11bQ
  labels:
    migration.openshift.io/migrated-by-migmigration: 0ed510f5-66f0-409c-a1a0-c7e18d3d47ff
    migration.openshift.io/migrated-by-migplan: bd694ade-91df-4eac-8fe7-e614f02f8274
    velero.io/backup-name: migration-1e0ed-initial-sbf8k
    velero.io/restore-name: migration-1e0ed-final-c9chn
  name: default-dockercfg-8lf66
  namespace: balance-fit-prd
type: kubernetes.io/dockercfg
