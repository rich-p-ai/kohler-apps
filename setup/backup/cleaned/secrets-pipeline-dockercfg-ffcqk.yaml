apiVersion: v1
data:
  .dockercfg: eyIxNzIuMzAuNDAuMTQwOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUppWVd4aGJtTmxMV1pwZEMxd2NtUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObFkzSmxkQzV1WVcxbElqb2ljR2x3Wld4cGJtVXRkRzlyWlc0dGJUbHdPSG9pTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pY0dsd1pXeHBibVVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUk0WlRneU16aGlNUzB3TVdGaUxUUm1PRFF0WVRrellpMHpNVEUxTWpCak5HVTJaRFlpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNlltRnNZVzVqWlMxbWFYUXRjSEprT25CcGNHVnNhVzVsSW4wLkRVejh5U3l0TkJWY1NOSG9NLV9ZQ1FKWDRLT05qZTVDdW8tT3J0b2c3cFFSa3NYYjNXN1d2ZENSMUJWWEJWazFIUkZWemRZN0RPVTZkekRWekZJbDN2VmpOdUZtenRvdnNidDN0Zk5ybVBCRHRUSkFNT2s2QThVa3ZPRmU1N1pnVWEtMk9HTEdwNEJzQnRwbVBIeXhaY1h2N29IMFF4VVp4LTNqM3dZZUs3enFFQktnWk1YVklNdG1yOTBmVWM4OEFuYzBtUDBZTXdBR2hnZEdIcGptb3k5WngtSU1xcW1wR2owUzM2dTd1TEdQTV9FRzdEUzZhUzFPWjFWU1hTaXBTOVZ0amFFNVZ0V3VxNkJXS19EZ0loM2l1emZsT0RtMDFyNWhiRUxPZkJjcEFxdUtEeDMyY0liSlYwcUs4SE1CMnV6djl0S3RiYTRSeXNnN3Bha19PUSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xyUm05Wk1qbGFURlJTYmxRelNrTmFSbXMxWkZWU2MxUnFWa3hoVmtKWlVrWkNOVlZzWXpCV1JWWkRUVzFLUkZFeWJGWlNhMHAxWVVVd2FXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwcFdWZDRhR0p0VG14TVYxcHdaRU14ZDJOdFVXbE1RMHB5WkZkS2JHTnROV3hrUjFaNlRHMXNka3d6VG14amJscHdXVEpXYUZreVRuWmtWelV3VEROT2JGa3pTbXhrUXpWMVdWY3hiRWxxYjJsalIyeDNXbGQ0Y0dKdFZYUmtSemx5V2xjMGRHSlViSGRQU0c5cFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14amJscHdXVEpWZEZsWFRtcGlNMVoxWkVNMWRWbFhNV3hKYW05cFkwZHNkMXBYZUhCaWJWVnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteGpibHB3V1RKVmRGbFhUbXBpTTFaMVpFTTFNV0ZYVVdsUGFVazBXbFJuZVUxNmFHbE5VekIzVFZkR2FVeFVVbTFQUkZGMFdWUnJlbGxwTUhwTlZFVXhUV3BDYWs1SFZUSmFSRmxwVEVOS2VtUlhTV2xQYVVwNlpWaE9NRnBYTURaak1sWjVaRzFzYWxwWFJtcFpNamt4WW01Uk5sbHRSbk5aVnpWcVdsTXhiV0ZZVVhSalNFcHJUMjVDY0dOSFZuTmhWelZzU1c0d0xrUlZlamg1VTNsMFRrSldZMU5PU0c5TkxWOVpRMUZLV0RSTFQwNXFaVFZEZFc4dFQzSjBiMmMzY0ZGU2EzTllZak5YTjFkMlpFTlNNVUpXV0VKV2F6RklVa1pXZW1SWk4wUlBWVFprZWtSV2VrWkpiRE4yVm1wT2RVWnRlblJ2ZG5OaWRETjBaazV5YlZCQ1JIUlVTa0ZOVDJzMlFUaFZhM1pQUm1VMU4xcG5WV0V0TWs5SFRFZHdORUp6UW5Sd2JWQkllWGhhWTFoMk4yOUlNRkY0VlZwNExUTnFNM2RaWlVzM2VuRkZRa3RuV2sxWVZrbE5kRzF5T1RCbVZXTTRPRUZ1WXpCdFVEQlpUWGRCUjJoblpFZEljR3B0YjNrNVduZ3RTVTF4Y1cxd1Iyb3dVek0yZFRkMVRFZFFUVjlGUnpkRVV6WmhVekZQV2pGV1UxaFRhWEJUT1ZaMGFtRkZOVlowVjNWeE5rSlhTMTlFWjBsb00ybDFlbVpzVDBSdE1ERnlOV2hpUlV4UFprSmpjRUZ4ZFV0RWVETXlZMGxpU2xZd2NVczRTRTFDTW5WNmRqbDBTM1JpWVRSU2VYTm5OM0JoYTE5UFVRPT0ifSwiZGVmYXVsdC1yb3V0ZS1vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuYXBwcy5vY3A0LmtvaGxlcmNvLmNvbSI6eyJ1c2VybmFtZSI6InNlcnZpY2VhY2NvdW50IiwicGFzc3dvcmQiOiJleUpoYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SWtGb1kyOVpMVFJuVDNKQ1pGazVkVVJzVGpWTGFWQllSRkI1VWxjMFZFVkNNbUpEUTJsVlJrSnVhRTBpZlEuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmlZV3hoYm1ObExXWnBkQzF3Y21RaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWNHbHdaV3hwYm1VdGRHOXJaVzR0YlRsd09Ib2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2ljR2x3Wld4cGJtVWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTRaVGd5TXpoaU1TMHdNV0ZpTFRSbU9EUXRZVGt6WWkwek1URTFNakJqTkdVMlpEWWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WW1Gc1lXNWpaUzFtYVhRdGNISmtPbkJwY0dWc2FXNWxJbjAuRFV6OHlTeXROQlZjU05Ib00tX1lDUUpYNEtPTmplNUN1by1PcnRvZzdwUVJrc1hiM1c3V3ZkQ1IxQlZYQlZrMUhSRlZ6ZFk3RE9VNmR6RFZ6RklsM3ZWak51Rm16dG92c2J0M3RmTnJtUEJEdFRKQU1PazZBOFVrdk9GZTU3WmdVYS0yT0dMR3A0QnNCdHBtUEh5eFpjWHY3b0gwUXhVWngtM2ozd1llSzd6cUVCS2daTVhWSU10bXI5MGZVYzg4QW5jMG1QMFlNd0FHaGdkR0hwam1veTlaeC1JTXFxbXBHajBTMzZ1N3VMR1BNX0VHN0RTNmFTMU9aMVZTWFNpcFM5VnRqYUU1VnRXdXE2QldLX0RnSWgzaXV6ZmxPRG0wMXI1aGJFTE9mQmNwQXF1S0R4MzJjSWJKVjBxSzhITUIydXp2OXRLdGJhNFJ5c2c3cGFrX09RIiwiZW1haWwiOiJzZXJ2aWNlYWNjb3VudEBleGFtcGxlLm9yZyIsImF1dGgiOiJjMlZ5ZG1salpXRmpZMjkxYm5RNlpYbEthR0pIWTJsUGFVcFRWWHBKTVU1cFNYTkpiWFJ3V2tOSk5rbHJSbTlaTWpsYVRGUlNibFF6U2tOYVJtczFaRlZTYzFScVZreGhWa0paVWtaQ05WVnNZekJXUlZaRFRXMUtSRkV5YkZaU2EwcDFZVVV3YVdaUkxtVjVTbkJqTTAxcFQybEtjbVJYU214amJUVnNaRWRXZWt3elRteGpibHB3V1RKV2FGa3lUblprVnpVd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hWWlZ6RnNZek5DYUZreVZXbFBhVXBwV1ZkNGFHSnRUbXhNVjFwd1pFTXhkMk50VVdsTVEwcHlaRmRLYkdOdE5XeGtSMVo2VEcxc2Rrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdURE5PYkZrelNteGtRelYxV1ZjeGJFbHFiMmxqUjJ4M1dsZDRjR0p0VlhSa1J6bHlXbGMwZEdKVWJIZFBTRzlwVEVOS2NtUlhTbXhqYlRWc1pFZFdla3h0YkhaTU0wNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1Fd3pUbXhqYmxwd1dUSlZkRmxYVG1waU0xWjFaRU0xZFZsWE1XeEphbTlwWTBkc2QxcFhlSEJpYlZWcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14amJscHdXVEpWZEZsWFRtcGlNMVoxWkVNMU1XRlhVV2xQYVVrMFdsUm5lVTE2YUdsTlV6QjNUVmRHYVV4VVVtMVBSRkYwV1ZScmVsbHBNSHBOVkVVeFRXcENhazVIVlRKYVJGbHBURU5LZW1SWFNXbFBhVXA2WlZoT01GcFhNRFpqTWxaNVpHMXNhbHBYUm1wWk1qa3hZbTVSTmxsdFJuTlpWelZxV2xNeGJXRllVWFJqU0VwclQyNUNjR05IVm5OaFZ6VnNTVzR3TGtSVmVqaDVVM2wwVGtKV1kxTk9TRzlOTFY5WlExRktXRFJMVDA1cVpUVkRkVzh0VDNKMGIyYzNjRkZTYTNOWVlqTlhOMWQyWkVOU01VSldXRUpXYXpGSVVrWldlbVJaTjBSUFZUWmtla1JXZWtaSmJETjJWbXBPZFVadGVuUnZkbk5pZEROMFprNXliVkJDUkhSVVNrRk5UMnMyUVRoVmEzWlBSbVUxTjFwblZXRXRNazlIVEVkd05FSnpRblJ3YlZCSWVYaGFZMWgyTjI5SU1GRjRWVnA0TFROcU0zZFpaVXMzZW5GRlFrdG5XazFZVmtsTmRHMXlPVEJtVldNNE9FRnVZekJ0VURCWlRYZEJSMmhuWkVkSWNHcHRiM2s1V25ndFNVMXhjVzF3UjJvd1V6TTJkVGQxVEVkUVRWOUZSemRFVXpaaFV6RlBXakZXVTFoVGFYQlRPVlowYW1GRk5WWjBWM1Z4TmtKWFMxOUVaMGxvTTJsMWVtWnNUMFJ0TURGeU5XaGlSVXhQWmtKamNFRnhkVXRFZURNeVkwbGlTbFl3Y1VzNFNFMUNNblY2ZGpsMFMzUmlZVFJTZVhObk4zQmhhMTlQVVE9PSJ9LCJpbWFnZS1yZWdpc3RyeS5vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuc3ZjLmNsdXN0ZXIubG9jYWw6NTAwMCI6eyJ1c2VybmFtZSI6InNlcnZpY2VhY2NvdW50IiwicGFzc3dvcmQiOiJleUpoYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SWtGb1kyOVpMVFJuVDNKQ1pGazVkVVJzVGpWTGFWQllSRkI1VWxjMFZFVkNNbUpEUTJsVlJrSnVhRTBpZlEuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmlZV3hoYm1ObExXWnBkQzF3Y21RaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWNHbHdaV3hwYm1VdGRHOXJaVzR0YlRsd09Ib2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2ljR2x3Wld4cGJtVWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTRaVGd5TXpoaU1TMHdNV0ZpTFRSbU9EUXRZVGt6WWkwek1URTFNakJqTkdVMlpEWWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WW1Gc1lXNWpaUzFtYVhRdGNISmtPbkJwY0dWc2FXNWxJbjAuRFV6OHlTeXROQlZjU05Ib00tX1lDUUpYNEtPTmplNUN1by1PcnRvZzdwUVJrc1hiM1c3V3ZkQ1IxQlZYQlZrMUhSRlZ6ZFk3RE9VNmR6RFZ6RklsM3ZWak51Rm16dG92c2J0M3RmTnJtUEJEdFRKQU1PazZBOFVrdk9GZTU3WmdVYS0yT0dMR3A0QnNCdHBtUEh5eFpjWHY3b0gwUXhVWngtM2ozd1llSzd6cUVCS2daTVhWSU10bXI5MGZVYzg4QW5jMG1QMFlNd0FHaGdkR0hwam1veTlaeC1JTXFxbXBHajBTMzZ1N3VMR1BNX0VHN0RTNmFTMU9aMVZTWFNpcFM5VnRqYUU1VnRXdXE2QldLX0RnSWgzaXV6ZmxPRG0wMXI1aGJFTE9mQmNwQXF1S0R4MzJjSWJKVjBxSzhITUIydXp2OXRLdGJhNFJ5c2c3cGFrX09RIiwiZW1haWwiOiJzZXJ2aWNlYWNjb3VudEBleGFtcGxlLm9yZyIsImF1dGgiOiJjMlZ5ZG1salpXRmpZMjkxYm5RNlpYbEthR0pIWTJsUGFVcFRWWHBKTVU1cFNYTkpiWFJ3V2tOSk5rbHJSbTlaTWpsYVRGUlNibFF6U2tOYVJtczFaRlZTYzFScVZreGhWa0paVWtaQ05WVnNZekJXUlZaRFRXMUtSRkV5YkZaU2EwcDFZVVV3YVdaUkxtVjVTbkJqTTAxcFQybEtjbVJYU214amJUVnNaRWRXZWt3elRteGpibHB3V1RKV2FGa3lUblprVnpVd1NXbDNhV0V6Vm1sYVdFcDFXbGhTYkdONU5YQmllVGw2V2xoS01tRlhUbXhaVjA1cVlqTldkV1JET1hWWlZ6RnNZek5DYUZreVZXbFBhVXBwV1ZkNGFHSnRUbXhNVjFwd1pFTXhkMk50VVdsTVEwcHlaRmRLYkdOdE5XeGtSMVo2VEcxc2Rrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdURE5PYkZrelNteGtRelYxV1ZjeGJFbHFiMmxqUjJ4M1dsZDRjR0p0VlhSa1J6bHlXbGMwZEdKVWJIZFBTRzlwVEVOS2NtUlhTbXhqYlRWc1pFZFdla3h0YkhaTU0wNXNZMjVhY0ZreVZtaFpNazUyWkZjMU1Fd3pUbXhqYmxwd1dUSlZkRmxYVG1waU0xWjFaRU0xZFZsWE1XeEphbTlwWTBkc2QxcFhlSEJpYlZWcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14amJscHdXVEpWZEZsWFRtcGlNMVoxWkVNMU1XRlhVV2xQYVVrMFdsUm5lVTE2YUdsTlV6QjNUVmRHYVV4VVVtMVBSRkYwV1ZScmVsbHBNSHBOVkVVeFRXcENhazVIVlRKYVJGbHBURU5LZW1SWFNXbFBhVXA2WlZoT01GcFhNRFpqTWxaNVpHMXNhbHBYUm1wWk1qa3hZbTVSTmxsdFJuTlpWelZxV2xNeGJXRllVWFJqU0VwclQyNUNjR05IVm5OaFZ6VnNTVzR3TGtSVmVqaDVVM2wwVGtKV1kxTk9TRzlOTFY5WlExRktXRFJMVDA1cVpUVkRkVzh0VDNKMGIyYzNjRkZTYTNOWVlqTlhOMWQyWkVOU01VSldXRUpXYXpGSVVrWldlbVJaTjBSUFZUWmtla1JXZWtaSmJETjJWbXBPZFVadGVuUnZkbk5pZEROMFprNXliVkJDUkhSVVNrRk5UMnMyUVRoVmEzWlBSbVUxTjFwblZXRXRNazlIVEVkd05FSnpRblJ3YlZCSWVYaGFZMWgyTjI5SU1GRjRWVnA0TFROcU0zZFpaVXMzZW5GRlFrdG5XazFZVmtsTmRHMXlPVEJtVldNNE9FRnVZekJ0VURCWlRYZEJSMmhuWkVkSWNHcHRiM2s1V25ndFNVMXhjVzF3UjJvd1V6TTJkVGQxVEVkUVRWOUZSemRFVXpaaFV6RlBXakZXVTFoVGFYQlRPVlowYW1GRk5WWjBWM1Z4TmtKWFMxOUVaMGxvTTJsMWVtWnNUMFJ0TURGeU5XaGlSVXhQWmtKamNFRnhkVXRFZURNeVkwbGlTbFl3Y1VzNFNFMUNNblY2ZGpsMFMzUmlZVFJTZVhObk4zQmhhMTlQVVE9PSJ9LCJpbWFnZS1yZWdpc3RyeS5vcGVuc2hpZnQtaW1hZ2UtcmVnaXN0cnkuc3ZjOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrRm9ZMjlaTFRSblQzSkNaRms1ZFVSc1RqVkxhVkJZUkZCNVVsYzBWRVZDTW1KRFEybFZSa0p1YUUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUppWVd4aGJtTmxMV1pwZEMxd2NtUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObFkzSmxkQzV1WVcxbElqb2ljR2x3Wld4cGJtVXRkRzlyWlc0dGJUbHdPSG9pTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pY0dsd1pXeHBibVVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUk0WlRneU16aGlNUzB3TVdGaUxUUm1PRFF0WVRrellpMHpNVEUxTWpCak5HVTJaRFlpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNlltRnNZVzVqWlMxbWFYUXRjSEprT25CcGNHVnNhVzVsSW4wLkRVejh5U3l0TkJWY1NOSG9NLV9ZQ1FKWDRLT05qZTVDdW8tT3J0b2c3cFFSa3NYYjNXN1d2ZENSMUJWWEJWazFIUkZWemRZN0RPVTZkekRWekZJbDN2VmpOdUZtenRvdnNidDN0Zk5ybVBCRHRUSkFNT2s2QThVa3ZPRmU1N1pnVWEtMk9HTEdwNEJzQnRwbVBIeXhaY1h2N29IMFF4VVp4LTNqM3dZZUs3enFFQktnWk1YVklNdG1yOTBmVWM4OEFuYzBtUDBZTXdBR2hnZEdIcGptb3k5WngtSU1xcW1wR2owUzM2dTd1TEdQTV9FRzdEUzZhUzFPWjFWU1hTaXBTOVZ0amFFNVZ0V3VxNkJXS19EZ0loM2l1emZsT0RtMDFyNWhiRUxPZkJjcEFxdUtEeDMyY0liSlYwcUs4SE1CMnV6djl0S3RiYTRSeXNnN3Bha19PUSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xyUm05Wk1qbGFURlJTYmxRelNrTmFSbXMxWkZWU2MxUnFWa3hoVmtKWlVrWkNOVlZzWXpCV1JWWkRUVzFLUkZFeWJGWlNhMHAxWVVVd2FXWlJMbVY1U25Cak0wMXBUMmxLY21SWFNteGpiVFZzWkVkV2Vrd3pUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdTV2wzYVdFelZtbGFXRXAxV2xoU2JHTjVOWEJpZVRsNldsaEtNbUZYVG14WlYwNXFZak5XZFdSRE9YVlpWekZzWXpOQ2FGa3lWV2xQYVVwcFdWZDRhR0p0VG14TVYxcHdaRU14ZDJOdFVXbE1RMHB5WkZkS2JHTnROV3hrUjFaNlRHMXNka3d6VG14amJscHdXVEpXYUZreVRuWmtWelV3VEROT2JGa3pTbXhrUXpWMVdWY3hiRWxxYjJsalIyeDNXbGQ0Y0dKdFZYUmtSemx5V2xjMGRHSlViSGRQU0c5cFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14amJscHdXVEpWZEZsWFRtcGlNMVoxWkVNMWRWbFhNV3hKYW05cFkwZHNkMXBYZUhCaWJWVnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteGpibHB3V1RKVmRGbFhUbXBpTTFaMVpFTTFNV0ZYVVdsUGFVazBXbFJuZVUxNmFHbE5VekIzVFZkR2FVeFVVbTFQUkZGMFdWUnJlbGxwTUhwTlZFVXhUV3BDYWs1SFZUSmFSRmxwVEVOS2VtUlhTV2xQYVVwNlpWaE9NRnBYTURaak1sWjVaRzFzYWxwWFJtcFpNamt4WW01Uk5sbHRSbk5aVnpWcVdsTXhiV0ZZVVhSalNFcHJUMjVDY0dOSFZuTmhWelZzU1c0d0xrUlZlamg1VTNsMFRrSldZMU5PU0c5TkxWOVpRMUZLV0RSTFQwNXFaVFZEZFc4dFQzSjBiMmMzY0ZGU2EzTllZak5YTjFkMlpFTlNNVUpXV0VKV2F6RklVa1pXZW1SWk4wUlBWVFprZWtSV2VrWkpiRE4yVm1wT2RVWnRlblJ2ZG5OaWRETjBaazV5YlZCQ1JIUlVTa0ZOVDJzMlFUaFZhM1pQUm1VMU4xcG5WV0V0TWs5SFRFZHdORUp6UW5Sd2JWQkllWGhhWTFoMk4yOUlNRkY0VlZwNExUTnFNM2RaWlVzM2VuRkZRa3RuV2sxWVZrbE5kRzF5T1RCbVZXTTRPRUZ1WXpCdFVEQlpUWGRCUjJoblpFZEljR3B0YjNrNVduZ3RTVTF4Y1cxd1Iyb3dVek0yZFRkMVRFZFFUVjlGUnpkRVV6WmhVekZQV2pGV1UxaFRhWEJUT1ZaMGFtRkZOVlowVjNWeE5rSlhTMTlFWjBsb00ybDFlbVpzVDBSdE1ERnlOV2hpUlV4UFprSmpjRUZ4ZFV0RWVETXlZMGxpU2xZd2NVczRTRTFDTW5WNmRqbDBTM1JpWVRSU2VYTm5OM0JoYTE5UFVRPT0ifX0=
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: pipeline
    kubernetes.io/service-account.uid: 8e8238b1-01ab-4f84-a93b-311520c4e6d6
    openshift.io/internal-registry-auth-token.binding: legacy
    openshift.io/migration-registry: ""
    openshift.io/token-secret.name: pipeline-token-m9p8z
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkFoY29ZLTRnT3JCZFk5dURsTjVLaVBYRFB5Ulc0VEVCMmJDQ2lVRkJuaE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJiYWxhbmNlLWZpdC1wcmQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoicGlwZWxpbmUtdG9rZW4tbTlwOHoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoicGlwZWxpbmUiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI4ZTgyMzhiMS0wMWFiLTRmODQtYTkzYi0zMTE1MjBjNGU2ZDYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6YmFsYW5jZS1maXQtcHJkOnBpcGVsaW5lIn0.DUz8ySytNBVcSNHoM-_YCQJX4KONje5Cuo-Ortog7pQRksXb3W7WvdCR1BVXBVk1HRFVzdY7DOU6dzDVzFIl3vVjNuFmztovsbt3tfNrmPBDtTJAMOk6A8UkvOFe57ZgUa-2OGLGp4BsBtpmPHyxZcXv7oH0QxUZx-3j3wYeK7zqEBKgZMXVIMtmr90fUc88Anc0mP0YMwAGhgdGHpjmoy9Zx-IMqqmpGj0S36u7uLGPM_EG7DS6aS1OZ1VSXSipS9VtjaE5VtWuq6BWK_DgIh3iuzflODm01r5hbELOfBcpAquKDx32cIbJV0qK8HMB2uzv9tKtba4Rysg7pak_OQ
  labels:
    migration.openshift.io/migrated-by-migmigration: 0ed510f5-66f0-409c-a1a0-c7e18d3d47ff
    migration.openshift.io/migrated-by-migplan: bd694ade-91df-4eac-8fe7-e614f02f8274
    velero.io/backup-name: migration-1e0ed-initial-sbf8k
    velero.io/restore-name: migration-1e0ed-final-c9chn
  name: pipeline-dockercfg-ffcqk
  namespace: balance-fit-prd
type: kubernetes.io/dockercfg
