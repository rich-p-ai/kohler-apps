apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/version: 1.0.0
    cluster: ocp-prd
    environment: production
  labels:
    app: nginx
    app.kubernetes.io/instance: balance-fit-prod
    app.kubernetes.io/name: balance-fit
    app.kubernetes.io/part-of: balance-fit-stack
    component: web
    environment: production
  name: nginx
  namespace: balance-fit-prd
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
      app.kubernetes.io/name: balance-fit
      app.kubernetes.io/part-of: balance-fit-stack
      environment: production
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/version: 1.0.0
        cluster: ocp-prd
        environment: production
      creationTimestamp: null
      labels:
        app: nginx
        app.kubernetes.io/name: balance-fit
        app.kubernetes.io/part-of: balance-fit-stack
        component: web
        environment: production
    spec:
      containers:
        - command:
            - sh
            - -c
            - |
              cp /etc/nginx/fastcgi_params /tmp/fastcgi_params && \
              echo "pid /tmp/nginx.pid; events { worker_connections 1024; } http { include /etc/nginx/mime.types; default_type application/octet-stream; include /etc/nginx/conf.d/site.conf; }" > /tmp/nginx.conf && \
              exec nginx -c /tmp/nginx.conf -g "daemon off;"
          env:
            - name: ENVIRONMENT
              value: production
          image: nginxinc/nginx-unprivileged:1.25-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8030
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx
          ports:
            - containerPort: 8030
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8030
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-config
              readOnly: true
            - mountPath: /code
              name: app-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: nginx-config
        - name: app-data
          persistentVolumeClaim:
            claimName: app-data
