apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    migration.openshift.io/preQuiescePaused: "false"
    migration.openshift.io/preQuiesceReplicas: "1"
  labels:
    app: efit
    app.kubernetes.io/instance: balance-fit-prd-prd
  name: efit
  namespace: balance-fit-prd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: efit
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: efit
    spec:
      containers:
        - image: marlonbarbosafocus/efit-2.0:1.0.28
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp -rf /var/www/. /code
          name: efit
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /code
              name: code
            - mountPath: /data
              name: efit-vol01
            - mountPath: /var/www/phpenvs
              name: configmap-env-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: code
          persistentVolumeClaim:
            claimName: code
        - name: efit-vol01
          persistentVolumeClaim:
            claimName: efit-vol01
        - configMap:
            defaultMode: 511
            items:
              - key: env
                path: .env
              - key: envphp
                path: envs.php
            name: configmap-env
          name: configmap-env-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    migration.openshift.io/preQuiescePaused: "false"
    migration.openshift.io/preQuiesceReplicas: "1"
  labels:
    app: mysql-app
    app.kubernetes.io/instance: balance-fit-prd-prd
  name: mysql-app
  namespace: balance-fit-prd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mysql-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql-app
      name: mysql-app
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: efit
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USERNAME
                  name: mysql-app
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: mysql-app
            - name: MYSQL_ROOT_PASSWORD
              value: "123456"
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          name: mysql-app
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    migration.openshift.io/preQuiescePaused: "false"
    migration.openshift.io/preQuiesceReplicas: "1"
  labels:
    app: nginx
    app.kubernetes.io/instance: balance-fit-prd-prd
  name: nginx
  namespace: balance-fit-prd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
        - image: quay.apps.ocp.kohlerco.com/kohler-base-images/nginx-unprivileged:latest
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: config-nginx
            - mountPath: /code
              name: code
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: devops-automation
        - name: quay-nonprod-devops-automation
        - name: quay-nonprod-devops-automation
        - name: quay-nonprod-devops-automation
        - name: devops-automation
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config
                path: site.conf
            name: configmap-nginx
          name: config-nginx
        - name: code
          persistentVolumeClaim:
            claimName: code
